"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[633],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,h=u["".concat(s,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));n(2389);const o={title:"Plan",sidebar_position:3,slug:"/get-started/plan"},i="Plan",l={unversionedId:"get-started/plan",id:"get-started/plan",title:"Plan",description:"This part of the guide will get you started with your first action plan.",source:"@site/docs/get-started/plan.mdx",sourceDirName:"get-started",slug:"/get-started/plan",permalink:"/get-started/plan",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/get-started/plan.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Plan",sidebar_position:3,slug:"/get-started/plan"},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/get-started/setup"},next:{title:"Input",permalink:"/get-started/input"}},s={},p=[{value:"What is an action plan?",id:"what-is-an-action-plan",level:3},{value:"Your First Action Plan",id:"your-first-action-plan",level:2},{value:"Generate the action plan",id:"generate-the-action-plan",level:3},{value:"&quot;There Is No Spoon&quot;",id:"there-is-no-spoon",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"plan"},"Plan"),(0,a.kt)("p",null,"This part of the guide will get you started with your first action plan."),(0,a.kt)("h3",{id:"what-is-an-action-plan"},"What is an action plan?"),(0,a.kt)("p",null,"An action plan is a set of actions that are selected based on the contents of an applications's source code."),(0,a.kt)("h2",{id:"your-first-action-plan"},"Your First Action Plan"),(0,a.kt)("p",null,"To get started, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TruStacks/react-sample/fork"},"fork")," the sample application repo."),(0,a.kt)("h3",{id:"generate-the-action-plan"},"Generate the action plan"),(0,a.kt)("p",null,"Clone the forked repo and run the following command from the root of the source:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"tsctl plan --name trustacks-react-sample\n")),(0,a.kt)("p",null,"After a few seconds, the action plan will be generated and you should now have an action plan in your action plans list named ",(0,a.kt)("inlineCode",{parentName:"p"},"trustacks-react-sample")," (unless you renamed your fork)."),(0,a.kt)("p",null,"Click the action plan list item to display the discovered actions. Click on an action to get a brief description of what the action does."),(0,a.kt)("h3",{id:"there-is-no-spoon"},'"There Is No Spoon"'),(0,a.kt)("p",null,"Where is the pipeline? You are looking it... sort of. "),(0,a.kt)("p",null,"TruStacks takes an orchestration through classification approach. Actions are not simply selected by the system, they are also understood. With ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Source-to-Action")),' TruStacks "builds pipelines" with no pipeline code. '),(0,a.kt)("p",null,"This enables action plans to be changed on the fly as developers and application sources grow and mature."),(0,a.kt)("p",null,'"There is no pipeline."'))}d.isMDXComponent=!0}}]);