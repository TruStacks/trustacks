"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[618],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=u(n),f=a,m=c["".concat(l,".").concat(f)]||c[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:4,slug:"/get-started/input",title:"Input"},o="Input",p={unversionedId:"get-started/input",id:"get-started/input",title:"Input",description:"This part of the guide will walk through setting up action inputs",source:"@site/docs/get-started/input.md",sourceDirName:"get-started",slug:"/get-started/input",permalink:"/get-started/input",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/get-started/input.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,slug:"/get-started/input",title:"Input"},sidebar:"tutorialSidebar",previous:{title:"Plan",permalink:"/get-started/plan"},next:{title:"Overview",permalink:"/core-concepts/overview"}},l={},u=[{value:"What are stack inputs?",id:"what-are-stack-inputs",level:3},{value:"Entering Stack Inputs",id:"entering-stack-inputs",level:3},{value:"Using Age",id:"using-age",level:5},{value:"Generate a stack input file",id:"generate-a-stack-input-file",level:4}],s={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"input"},"Input"),(0,a.kt)("p",null,"This part of the guide will walk through setting up action inputs"),(0,a.kt)("h3",{id:"what-are-stack-inputs"},"What are stack inputs?"),(0,a.kt)("p",null,"Stack inputs are user-defined parameters and credentials that are used in action plans to complete the delivery of an application."),(0,a.kt)("h3",{id:"entering-stack-inputs"},"Entering Stack Inputs"),(0,a.kt)("h5",{id:"using-age"},"Using Age"),(0,a.kt)("p",null,"Inputs must be encyrpted before being used in action plans. Run the following command to create an age key pair:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"age-keygen -o key.txt\n")),(0,a.kt)("p",null,"Keep this key handy for the next step."),(0,a.kt)("h4",{id:"generate-a-stack-input-file"},"Generate a stack input file"),(0,a.kt)("p",null,"Before we populate stack inputs we need to generate the appropriate input keys."),(0,a.kt)("p",null,"TruStacks provides a helper command to generate a keyed input file from an existing plan. Run the following command to generate a new input file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"tsctl stack init --from-plan trustacks-react-sample.plan\n")),(0,a.kt)("p",null,"A file named ",(0,a.kt)("inlineCode",{parentName:"p"},"inputs.yaml")," is placed on the filesystem. You can now populate the keys with the appropriate values."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"tsctl explain trutacks-react-sample.plan")," to view a detailed description of the action plan. The inputs section will contain documentation links for all included inputs with more information.")),(0,a.kt)("p",null,"After populating the input values run the following command to encrypt the inputs file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sops -e -i --age <age_public_key> inputs.yaml\n")),(0,a.kt)("p",null,"Your inputs file should now be encrypted, and you are ready to move on to the next step."))}d.isMDXComponent=!0}}]);